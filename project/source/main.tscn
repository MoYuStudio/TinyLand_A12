[gd_scene load_steps=13 format=3 uid="uid://wwpvjmd5lbfq"]

[ext_resource type="ArrayMesh" uid="uid://c4ftb5m1sb50a" path="res://resource/graphics/block/0.obj" id="1_2bcoi"]
[ext_resource type="MeshLibrary" uid="uid://doigj2o1r5cw2" path="res://resource/bit_resource/mesh_library/mesh_library.tres" id="2_2p0cw"]
[ext_resource type="Texture2D" uid="uid://detgtla4rwd33" path="res://resource/graphics/steam/steam_bg_fin.png" id="3_aojvk"]

[sub_resource type="GDScript" id="GDScript_os8tr"]
script/source = "
extends Camera3D

var move_speed = 0.2

func _ready():
	pass

func _process(delta):
	if Input.is_action_pressed('W'):
		global_position.z -= move_speed
	elif Input.is_action_pressed('S'):
		global_position.z += move_speed
	elif Input.is_action_pressed('D'):
		global_position.x += move_speed
	elif Input.is_action_pressed('A'):
		global_position.x -= move_speed
	#elif Input.MOUSE_MODE_CAPTURED:
	#	print(Input.MOUSE_MODE_CAPTURED)
	var mouse_movement = Vector2(get_viewport().get_mouse_position())
	
	global_rotation.x = mouse_movement.y*0.02+300
	global_rotation.y = mouse_movement.x*0.02-300
	
		
"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_fvv84"]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_2jnm5"]
output_port_for_preview = 0
parameter_name = "Pixelisation"
hint = 2
min = 256.0
max = 512.0
step = 2.0
default_value_enabled = true
default_value = 4.0

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_2ipjn"]
output_port_for_preview = 0
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0
operator = 2

[sub_resource type="VisualShaderNodeVectorFunc" id="VisualShaderNodeVectorFunc_obycw"]
output_port_for_preview = 0
default_input_values = [0, Vector2(0, 0)]
op_type = 0
function = 17

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_h4f8q"]
output_port_for_preview = 0
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0
operator = 3

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_a3uu2"]
source = 1

[sub_resource type="VisualShader" id="VisualShader_an6bm"]
code = "shader_type canvas_item;
uniform float Pixelisation : hint_range(256, 512, 2) = 4;



void fragment() {
// Input:2
	vec2 n_out2p0 = UV;


// FloatParameter:3
	float n_out3p0 = Pixelisation;


// VectorOp:4
	vec2 n_out4p0 = n_out2p0 * vec2(n_out3p0);


// VectorFunc:5
	vec2 n_out5p0 = floor(n_out4p0);


// VectorOp:6
	vec2 n_out6p0 = n_out5p0 / vec2(n_out3p0);


	vec4 n_out7p0;
// Texture2D:7
	n_out7p0 = textureLod(SCREEN_TEXTURE, n_out6p0, 0.0);


// Output:0
	COLOR.rgb = vec3(n_out7p0.xyz);


}
"
graph_offset = Vector2(43.8512, 418.18)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(620, 340)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_fvv84")
nodes/fragment/2/position = Vector2(-580, 80)
nodes/fragment/3/node = SubResource("VisualShaderNodeFloatParameter_2jnm5")
nodes/fragment/3/position = Vector2(-580, 380)
nodes/fragment/4/node = SubResource("VisualShaderNodeVectorOp_2ipjn")
nodes/fragment/4/position = Vector2(-220, 80)
nodes/fragment/5/node = SubResource("VisualShaderNodeVectorFunc_obycw")
nodes/fragment/5/position = Vector2(-40, 80)
nodes/fragment/6/node = SubResource("VisualShaderNodeVectorOp_h4f8q")
nodes/fragment/6/position = Vector2(160, 300)
nodes/fragment/7/node = SubResource("VisualShaderNodeTexture_a3uu2")
nodes/fragment/7/position = Vector2(400, 320)
nodes/fragment/connections = PackedInt32Array(2, 0, 4, 0, 3, 0, 4, 1, 4, 0, 5, 0, 5, 0, 6, 0, 3, 0, 6, 1, 6, 0, 7, 0, 7, 0, 0, 0)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_ch05w"]
shader = SubResource("VisualShader_an6bm")
shader_parameter/Pixelisation = null

[node name="main" type="Node3D"]

[node name="0" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 2.44673, -0.430283, 2.34443)
mesh = ExtResource("1_2bcoi")

[node name="GridMap" type="GridMap" parent="."]
mesh_library = ExtResource("2_2p0cw")
cell_size = Vector3(1.6, 1.6, 1.6)
data = {
"cells": PackedInt32Array(3, 65529, 0, 3, 65530, 0, 3, 65531, 0, 3, 65532, 0, 3, 65533, 0, 3, 65534, 0, 3, 65535, 0, 3, 0, 0, 2, 65528, 0, 2, 65531, 0, 1, 65531, 0, 0, 65531, 0, 65535, 65532, 0, 65534, 65532, 0, 65533, 65532, 0, 65532, 65532, 0, 65531, 65532, 0, 65531, 65533, 0, 65530, 65533, 0, 65530, 65532, 0, 65531, 65531, 0, 65531, 65530, 0, 65532, 65530, 0, 65533, 65530, 0, 65533, 65529, 0, 65534, 65529, 0, 65534, 65528, 0, 65535, 65528, 0, 65535, 65527, 0, 0, 65527, 0, 4, 65530, 0, 4, 65529, 0, 4, 65528, 0, 3, 65528, 0, 3, 65527, 0, 2, 65527, 0, 2, 65526, 0, 1, 65526, 0, 1, 65525, 0, 7, 3, 262144, 8, 3, 262144, 9, 3, 262144, 10, 4, 262144, 11, 4, 262144, 12, 4, 262144, 12, 5, 262144, 10, 65534, 262144, 10, 65533, 262144, 11, 65531, 262144, 11, 65529, 262144, 11, 65528, 262144, 11, 65527, 262144, 12, 65526, 262144, 12, 65525, 262144, 11, 65524, 262144, 11, 65523, 262144, 11, 65522, 262144, 12, 65521, 262144, 11, 65520, 262144, 11, 65519, 262144, 11, 65518, 262144, 10, 65517, 262144, 9, 65518, 262144, 8, 65518, 262144, 7, 65518, 262144, 5, 65518, 262144, 4, 65519, 262144, 2, 65520, 262144, 2, 65521, 262144, 1, 65521, 262144, 0, 65521, 262144, 0, 65522, 262144, 65535, 65522, 262144, 65534, 65522, 262144, 65533, 65522, 262144, 65533, 65523, 262144, 65532, 65523, 262144, 65532, 65524, 262144, 65531, 65524, 262144, 65531, 65525, 262144, 16, 65526, 262144, 16, 65527, 262144, 16, 65528, 262144, 16, 65529, 262144, 15, 65530, 262144, 15, 65531, 262144, 15, 65532, 262144, 15, 65533, 262144, 14, 65533, 262144, 18, 65532, 262144, 17, 65532, 262144, 16, 65532, 262144, 13, 65533, 262144, 12, 65533, 262144, 12, 65534, 262144, 11, 65534, 262144, 10, 65535, 262144, 9, 65535, 262144, 13, 65534, 262144, 14, 65534, 262144, 13, 65535, 262144, 14, 65535, 262144, 13, 65532, 262144, 13, 65531, 262144, 12, 65531, 262144, 10, 65531, 262144, 10, 65532, 262144)
}

[node name="Camera3D" type="Camera3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 0.929133, 0.369747, 0, -0.369747, 0.929133, 0.693, 9.675, 2.24)
fov = 85.0
script = SubResource("GDScript_os8tr")

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 0.683631, 0.729828, 0, -0.729828, 0.683631, 0, 12.8455, -5.25435)
light_color = Color(0.921569, 0.74902, 0.721569, 1)
light_energy = 3.797
light_indirect_energy = 1.895
light_volumetric_fog_energy = 0.776

[node name="Sprite2D" type="Sprite2D" parent="."]
visible = false
material = SubResource("ShaderMaterial_ch05w")
use_parent_material = true
position = Vector2(670.5, 374)
scale = Vector2(4.36201, 5.4221)
texture = ExtResource("3_aojvk")
